{
  "name": "hardcoded_secrets",
  "description": "Code with hardcoded secrets and insecure sensitive information handling",
  "files": {
    "config_manager.py": [
      "def get_database_connection():",
      "    # Hardcoded credentials",
      "    username = 'admin'",
      "    password = 'S3cret_P@ssw0rd!'",
      "    conn = connect_db(host='database.example.com', username=username, password=password)",
      "    return conn",
      "",
      "def authenticate_user(user):",
      "    # API key hardcoded",
      "    api_key = 'sk_live_51HZ3XYZ123ABC456DEF789GHI'",
      "    headers = {'Authorization': f'Bearer {api_key}'}",
      "    response = requests.post('https://api.example.com/auth', headers=headers, json=user)",
      "    return response.json()",
      "",
      "# AWS credentials in code",
      "AWS_ACCESS_KEY = 'AKIAIOSFODNN7EXAMPLE'",
      "AWS_SECRET_KEY = 'wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY'",
      "",
      "def setup_s3_client():",
      "    return boto3.client('s3', aws_access_key_id=AWS_ACCESS_KEY, aws_secret_access_key=AWS_SECRET_KEY)"
    ]
  },
  "expected_comments": [
    {
      "path": "config_manager.py",
      "line": 3,
      "body": "Hardcoded credentials detected. Move sensitive information to environment variables or a secure vault."
    },
    {
      "path": "config_manager.py",
      "line": 4,
      "body": "Hardcoded password detected. Store sensitive credentials in environment variables or a secrets management system."
    },
    {
      "path": "config_manager.py",
      "line": 10,
      "body": "Hardcoded API key detected. API keys should be stored securely in environment variables or a secrets management system."
    },
    {
      "path": "config_manager.py",
      "line": 17,
      "body": "Hardcoded AWS credentials detected. Never include cloud provider credentials in code. Use IAM roles or secure environment variables."
    },
    {
      "path": "config_manager.py",
      "line": 18,
      "body": "Hardcoded AWS secret key detected. This is a serious security vulnerability. Store AWS credentials securely or use instance profiles."
    }
  ]
} 